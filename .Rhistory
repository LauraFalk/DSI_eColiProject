setwd("C:/Users/Laura/Desktop/DSI_DataProcessing/Data")
library(knitr)
opts_chunk$set(echo = TRUE)
RawFileName <- "EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "EPA_PortalQuery_Locations_Appended_SODN.csv"
ecoli_data <- read.csv(RawFileName)
list.files
list.files(getwc())
list.files(getwd())
import("EPA_PortalQuery_Appended_SODN.csv")
read.csv("EPA_PortalQuery_Appended_SODN.csv")
ecoli_data <- read.csv(RawFileName)
setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "EPA_PortalQuery_Locations_Appended_SODN.csv"
ecoli_data <- read.csv(RawFileName)
RawFileName <- "/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "EPA_PortalQuery_Locations_Appended_SODN.csv"
ecoli_data <- read.csv(RawFileName)
setwd("C:/Users/Laura/Desktop/DSI_DataProcessing")
library(knitr)
opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "data/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "data/EPA_PortalQuery_Locations_Appended_SODN.csv"
ecoli_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
View(ecoli_data)
View(ecoli_data)
library(knitr)
opts_chunk$set(echo = TRUE)
coliform_data <- read.csv(RawFileName)
ecoli_data <- coliform_data[coliform_data$CharacteristicName == "Escherichia coli", ]
View(ecoli_data)
unique(ecoli_data$ResultAnalyticalMethod.MethodName)
unique(ecoli_data$ResultAnalyticalMethod.MethodName,ecoli_data$ResultAnalyticalMethod.MethodDescriptionText)
test <- ecoli_data[coliform_data$ResultAnalyticalMethod.MethodName == "field", ]
test <- ecoli_data[coliform_data$ResultAnalyticalMethod.MethodName == "FIELD", ]
View(test)
ecoli_data_9223b <- coliform_data[ResultAnalyticalMethod.MethodName == "E coli, water, Colilert (24-28)"|
ResultAnalyticalMethod.MethodName ==  "COLILERT (EDBERG)"|
ResultAnalyticalMethod.MethodName ==  "COLILERT"|
ResultAnalyticalMethod.MethodName ==  "SM 9223B", ]
ecoli_data_9223b <- ecoli_data[ecoli_data$ResultAnalyticalMethod.MethodName == "E coli, water, Colilert (24-28)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT (EDBERG)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "SM 9223B", ]
library(knitr)
opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "data/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "data/EPA_PortalQuery_Locations_Appended_SODN.csv"
coliform_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
ecoli_data <- coliform_data[coliform_data$CharacteristicName == "Escherichia coli", ]
ecoli_data_9223b <- ecoli_data[ecoli_data$ResultAnalyticalMethod.MethodName == "E coli, water, Colilert (24-28)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT (EDBERG)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "SM 9223B", ]
jointdataset <- merge(ecoli_data, Locations, by = c("MonitoringLocationIdentifier"))
library(knitr)
opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "data/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "data/EPA_PortalQuery_Locations_Appended_SODN.csv"
coliform_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
ecoli_data <- coliform_data[coliform_data$CharacteristicName == "Escherichia coli", ]
ecoli_data_9223b <- ecoli_data[ecoli_data$ResultAnalyticalMethod.MethodName == "E coli, water, Colilert (24-28)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT (EDBERG)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "SM 9223B", ]
jointdataset <- merge(ecoli_data_8223b, Locations, by = c("MonitoringLocationIdentifier"))
jointdataset <- merge(ecoli_data_9223b, Locations, by = c("MonitoringLocationIdentifier"))
View(jointdataset)
ecoli_data_9223b_StudyLocation <- merge(ecoli_data_9223b, Locations, by = c("MonitoringLocationIdentifier"))
ecoli_data_9223b <- ecoli_data_9223b[ecoli_data_9223b$ActivityStartDate >= 7/1/2009, ]
View(ecoli_data_9223b_StudyLocation)
library(lubridate)
ecoli_data_9223b$DateAsDate <- mdy_hms(ecoli_data_9223b$ActivityStartDate,tz="America/Phoenix")
ecoli_data_9223b$DateAsDate <-format(as.POSIXct(ecoli_data_9223b$DateAsDate),format='%Y-%m-%d')
ecoli_data_9223b <- ecoli_data_9223b[ecoli_data_9223b$ActivityStartDate >= 7/1/2009, ]
ecoli_data_9223b$DateAsDate <- mdy_hms(ecoli_data_9223b$ActivityStartDate,tz="America/Phoenix")
View(ecoli_data_9223b_StudyLocation)
library(knitr)
library(lubridate)
opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "data/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "data/EPA_PortalQuery_Locations_Appended_SODN.csv"
coliform_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
ecoli_data <- coliform_data[coliform_data$CharacteristicName == "Escherichia coli", ]
ecoli_data_9223b <- ecoli_data[ecoli_data$ResultAnalyticalMethod.MethodName == "E coli, water, Colilert (24-28)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT (EDBERG)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "SM 9223B", ]
ecoli_data_9223b$DateAsDate <- mdy_hms(ecoli_data_9223b$ActivityStartDate,tz="America/Phoenix")
View(ecoli_data_9223b)
ecoli_data_9223b$DateAsDate <-format(as.POSIXct(ecoli_data_9223b$DateAsDate),format='%Y-%m-%d')
ecoli_data_9223b$DateAsDate <-format(as.POSIXct(ecoli_data_9223b$ActivityStartDate),format='%Y-%m-%d')
ecoli_data_9223b$DateAsDate <- as.Date(ecoli_data_9223b$ActivityStartDate)
ecoli_data_9223b$DateAsDate <- as.Date(ecoli_data_9223b$ActivityStartDate)
ecoli_data_9223b$DateAsDate <- mdy_hms(ecoli_data_9223b$ActivityStartDate)
ecoli_data_9223b$DateAsDate <- mdy(ecoli_data_9223b$ActivityStartDate,tz="America/Phoenix")
ecoli_data_9223b$DateAsDate <-format(as.POSIXct(ecoli_data_9223b$DateAsDate),format='%Y-%m-%d')
ecoli_data_9223b <- ecoli_data_9223b[ecoli_data_9223b$ActivityStartDate >= 7/1/2009, ]
ecoli_data_9223b <- ecoli_data_9223b[ecoli_data_9223b$DateAsDate >= 7/1/2009, ]
ecoli_data_9223b$DateAsDate <- mdy(ecoli_data_9223b$ActivityStartDate,tz="America/Phoenix")
ecoli_data_9223b$DateAsDate <-format(as.POSIXct(ecoli_data_9223b$DateAsDate),format='%Y-%m-%d')
ecoli_data_9223b <- ecoli_data_9223b[ecoli_data_9223b$DateAsDate >= 2009-07-01, ]
library(knitr)
library(lubridate)
opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "data/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "data/EPA_PortalQuery_Locations_Appended_SODN.csv"
coliform_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
ecoli_data <- coliform_data[coliform_data$CharacteristicName == "Escherichia coli", ]
ecoli_data_9223b <- ecoli_data[ecoli_data$ResultAnalyticalMethod.MethodName == "E coli, water, Colilert (24-28)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT (EDBERG)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "SM 9223B", ]
ecoli_data_9223b$DateAsDate <- mdy(ecoli_data_9223b$ActivityStartDate,tz="America/Phoenix")
ecoli_data_9223b$DateAsDate <-format(as.POSIXct(ecoli_data_9223b$DateAsDate),format='%Y-%m-%d')
ecoli_data_9223b_date <- ecoli_data_9223b[ecoli_data_9223b$DateAsDate >= 2009-07-01, ]
library(dplyr)
library(knitr)
library(lubridate)
opts_chunk$set(echo = TRUE)
ecoli_data_9223b_date <- ecoli_data_9223b[ecoli_data_9223b$DateAsDate >= "2009-07-01", ]
#library(dplyr)
library(knitr)
library(lubridate)
opts_chunk$set(echo = TRUE)
ecoli_ForAnalysis <- merge(ecoli_data_9223b_date, Locations, by = c("MonitoringLocationIdentifier"))
#library(dplyr)
library(knitr)
library(lubridate)
opts_chunk$set(echo = TRUE)
write.csv(ecoli_ForAnalysis)
ecoli_ForAnalysis <- merge(ecoli_data_9223b_date, Locations, by = c("MonitoringLocationIdentifier"))
write.csv(ecoli_ForAnalysis,"C:/Users/Laura/Desktop/DSI_Project/ecoli_ForAnalysis.csv")
ecoli_ForAnalysis <- merge(ecoli_data_9223b_date, Locations, by = c("MonitoringLocationIdentifier"))
write.csv(ecoli_ForAnalysis,"C:/Users/Laura/Desktop/DSI_DataProcessing/ecoli_ForAnalysis.csv")
ecoli_ForAnalysis <- merge(ecoli_data_9223b_date, Locations, by = c("MonitoringLocationIdentifier"))
write.csv(ecoli_ForAnalysis,"C:/Users/Laura/Desktop/DSI_DataProcessing/Data/Processed/ecoli_ForAnalysis.csv")
library(knitr)
library(dataRetrieval)
library(lubridate)
library(data.table)
library(measurements)
RawFileName <- "Data/Processed/ecoli_ForAnalysis.csv"
read.csv(RawFileName)
RawFileName <- "Data/Processed/ecoli_ForAnalysis.csv"
ecoli_Flow_merge <- read.csv(RawFileName)
#library(dplyr)
library(knitr)
library(lubridate)
opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "Data/Raw/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "Data/EPA_PortalQuery_Locations_Appended_SODN.csv"
coliform_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "Data/Raw/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "Data/Raw/EPA_PortalQuery_Locations_Appended_SODN.csv"
coliform_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
#library(dplyr)
library(knitr)
library(lubridate)
opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "Data/Raw/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "Data/Raw/EPA_PortalQuery_Locations_Appended_SODN.csv"
coliform_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
ecoli_data <- coliform_data[coliform_data$CharacteristicName == "Escherichia coli", ]
ecoli_data_9223b <- ecoli_data[ecoli_data$ResultAnalyticalMethod.MethodName == "E coli, water, Colilert (24-28)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT (EDBERG)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "SM 9223B", ]
ecoli_data_9223b$DateAsDate <- mdy(ecoli_data_9223b$ActivityStartDate,tz="America/Phoenix")
ecoli_data_9223b$DateAsDate <-format(as.POSIXct(ecoli_data_9223b$DateAsDate),format='%Y-%m-%d')
ecoli_data_9223b_date <- ecoli_data_9223b[ecoli_data_9223b$DateAsDate >= "2009-07-01", ]
ecoli_ForAnalysis <- merge(ecoli_data_9223b_date, Locations, by = c("MonitoringLocationIdentifier"))
write.csv(ecoli_ForAnalysis,"C:/Users/Laura/Desktop/DSI_DataProcessing/Data/Processed/ecoli_ForAnalysis.csv")
RawFileName <- "Data/Processed/ecoli_ForAnalysis.csv"
ecoli_Flow_merge <- read.csv(RawFileName)
USGS <- read.csv("Data/Raw/USGS_09481740.csv")
ecoli_Flow_Merge <- read.csv(eColi_FileName)
eColi_FileName <- "Data/Processed/ecoli_ForAnalysis.csv"
ecoli_Flow_Merge <- read.csv(eColi_FileName)
library(knitr)
library(dataRetrieval)
library(lubridate)
library(data.table)
library(measurements)
library(knitr)
library(dataRetrieval)
library(lubridate)
library(data.table)
library(measurements)
eColi_FileName <- "Data/Processed/ecoli_ForAnalysis.csv"
ecoli_Flow_Merge <- read.csv(eColi_FileName)
USGS <- read.csv("Data/Raw/USGS_09481740.csv")
ecoli_Flow_Merge$DateTime <- mdy_hms(paste(ecoli_Flow_Merge$ActivityStartDate,
ecoli_Flow_Merge$ActivityStartTime.Time),tz="America/Phoenix")
View(ecoli_Flow_Merge)
#Ensure it is date-transformed correctly because datetimes are a pain.
ecoli_Flow_Merge$DateTime <-format(as.POSIXct(ecoli_Flow_Merge$DateTime),format='%Y-%m-%d %H:%M')
USGS$dateTime1 <-format(as.POSIXct(USGS$dateTime), format = '%Y-%m-%d %H:%M')
#Set column name
setnames(USGS,old=c("X_00060_00000", "X_00065_00000"),new=c("Discharge_CFS", "USGS_Depth_ft"))
USGS$USGS_Depth_in <-conv_unit(USGS$USGS_Depth_ft, "ft", "inch")
View(ecoli_Flow_Merge)
Outputtest<-
merge(x = ecoli_Flow_Merge,
y = USGS[ , c("dateTime1", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime', by.y = 'dateTime1', all.x=TRUE)
View(Outputtest)
ecoli_Flow_Merge$DateTime <- mdy_hms(paste(ecoli_Flow_Merge$ActivityStartDate,
ecoli_Flow_Merge$ActivityStartTime.Time),tz="America/Phoenix")
#Ensure it is date-transformed correctly because datetimes are a pain.
ecoli_Flow_Merge$DateTime <-format(as.POSIXct(ecoli_Flow_Merge$DateTime),format='%Y-%m-%d %H:%M')
ecoli_Flow_Merge$DateTime1 <- round_date(ecoli_Flow_Merge$DateTime, "15 minutes")
ecoli_Flow_Merge$DateTime1 <- round_date(as.POSIXct(ecoli_Flow_Merge$DateTime), "15 minutes")
View(ecoli_Flow_Merge)
library(knitr)
library(dataRetrieval)
library(lubridate)
library(data.table)
library(measurements)
eColi_FileName <- "Data/Processed/ecoli_ForAnalysis.csv"
ecoli_Flow_Merge <- read.csv(eColi_FileName)
USGS <- read.csv("Data/Raw/USGS_09481740.csv")
ecoli_Flow_Merge$DateTime <- mdy_hms(paste(ecoli_Flow_Merge$ActivityStartDate,
ecoli_Flow_Merge$ActivityStartTime.Time),tz="America/Phoenix")
#Ensure it is date-transformed correctly because datetimes are a pain. Round to the nearest quarter hour to match with flow levels from gage
ecoli_Flow_Merge$DateTime1 <- round_date(as.POSIXct(ecoli_Flow_Merge$DateTime), "15 minutes")
USGS$dateTime2 <-format(as.POSIXct(USGS$dateTime), format = '%Y-%m-%d %H:%M')
#Set column name
setnames(USGS,old=c("X_00060_00000", "X_00065_00000"),new=c("Discharge_CFS", "USGS_Depth_ft"))
USGS$USGS_Depth_in <-conv_unit(USGS$USGS_Depth_ft, "ft", "inch")
Outputtest<-
merge(x = ecoli_Flow_Merge,
y = USGS[ , c("dateTime1", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'dateTime2', all.x=TRUE)
Outputtest<-
merge(x = ecoli_Flow_Merge,
y = USGS[ , c("dateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'dateTime2', all.x=TRUE)
View(Outputtest)
Outputtest<-
merge(x = ecoli_Flow_Merge[,"datetime1"],
y = USGS[ , c("dateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'dateTime2', all.x=TRUE)
Outputtest<-
merge(x = ecoli_Flow_Merge[,"DateTime1"],
y = USGS[ , c("dateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'dateTime2', all.x=TRUE)
Outputtest<-
merge(x = ecoli_Flow_Merge[,"ActivityStartDate"],
y = USGS[ , c("dateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'dateTime2', all.x=TRUE)
Outputtest<-
merge(x = ecoli_Flow_Merge[,"DateTime1"],
y = USGS[ , c("dateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'dateTime2', all.x=TRUE)
Outputtest<-
merge(x = ecoli_Flow_Merge,
y = USGS[ , c("dateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'DateTime2', all.x=TRUE)
library(knitr)
library(dataRetrieval)
library(lubridate)
library(data.table)
library(measurements)
eColi_FileName <- "Data/Processed/ecoli_ForAnalysis.csv"
ecoli_Flow_Merge <- read.csv(eColi_FileName)
USGS <- read.csv("Data/Raw/USGS_09481740.csv")
ecoli_Flow_Merge$DateTime <- mdy_hms(paste(ecoli_Flow_Merge$ActivityStartDate,
ecoli_Flow_Merge$ActivityStartTime.Time),tz="America/Phoenix")
#Ensure it is date-transformed correctly because datetimes are a pain. Round to the nearest quarter hour to match with flow levels from gage
ecoli_Flow_Merge$DateTime1 <- round_date(as.POSIXct(ecoli_Flow_Merge$DateTime), "15 minutes")
USGS$DateTime2 <-format(as.POSIXct(USGS$dateTime), format = '%Y-%m-%d %H:%M')
#Set column name
setnames(USGS,old=c("X_00060_00000", "X_00065_00000"),new=c("Discharge_CFS", "USGS_Depth_ft"))
USGS$USGS_Depth_in <-conv_unit(USGS$USGS_Depth_ft, "ft", "inch")
Outputtest<-
merge(x = ecoli_Flow_Merge,
y = USGS[ , c("dateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'DateTime2', all.x=TRUE)
Outputtest<-
merge(x = ecoli_Flow_Merge,
y = USGS[ , c("DateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'DateTime2', all.x=TRUE)
View(Outputtest)
Outputtest<-
merge(x = ecoli_Flow_Merge,
y = USGS[ , c("DateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'DateTime2')
#, all.x=TRUE)
View(USGS)
View(ecoli_Flow_Merge)
ecoli_Flow_Merge$DateTime <- mdy_hms(paste(ecoli_Flow_Merge$ActivityStartDate,
ecoli_Flow_Merge$ActivityStartTime.Time),tz="America/Phoenix")
#Ensure it is date-transformed correctly because datetimes are a pain. Round to the nearest quarter hour to match with flow levels from gage
ecoli_Flow_Merge$DateTime1 <- round_date(as.POSIXct(ecoli_Flow_Merge$DateTime), "15 minutes")
ecoli_Flow_Merge$DateTime1 <-format(as.POSIXct(ecoli_Flow_Merge$DateTime1), format = '%Y-%m-%d %H:%M')
Outputtest<-
merge(x = ecoli_Flow_Merge,
y = USGS[ , c("DateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'DateTime2')
#, all.x=TRUE)
Outputtest<-
merge(x = ecoli_Flow_Merge[ , c("DateTime1")],
y = USGS[ , c("DateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'DateTime2')
Outputtest<-
merge(x = ecoli_Flow_Merge[ , c("DateTime1","MonitoringLocationIdentifier")],
y = USGS[ , c("DateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'DateTime2')
#, all.x=TRUE)
View(Outputtest)
Outputtest<-
merge(x = ecoli_Flow_Merge[ , c("DateTime1","X")],
y = USGS[ , c("DateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'DateTime2', all.x=TRUE)
View(Outputtest)
Outputtest<-
merge(x = ecoli_Flow_Merge[ , c("DateTime1","X")],
y = USGS[ , c("DateTime2", "Discharge_CFS", "USGS_Depth_in")],
by.x='DateTime1', by.y = 'DateTime2')#, all.x=TRUE)
