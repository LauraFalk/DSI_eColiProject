endDate = "2022-08-30"
tz="America/Phoenix"
#creates table in R
#USGS_Raw <- readNWISuv(site_id,c('00060','00065'), startDate,endDate, tz)
#write.csv(USGS_Raw,"Data/Raw/USGS_09481740.csv")
USGS_Raw <- read.csv("Data/Raw/USGS_09481740.csv")
USGS_Standardized <- USGS_Raw
USGS_Standardized$DateTime2 <- round_date(as.POSIXct(USGS_Standardized$dateTime), "15 minutes")
USGS_Standardized$DateTime2 <-as.POSIXct(format(USGS_Standardized$DateTime2, format = '%Y-%m-%d %H:%M'), tz = tz)
view <- USGS_Standardized %>% group_by(DateTime2) %>% summarise(n=sum(n())) %>% filter(n>1)
# remove the pre-rounding dateTime column
USGS_Standardized_RmDupls <- USGS_Standardized %>%
subset(select = -c(dateTime))
# This shows any duplicate dates. There are a few because the data was not collected on the standard 15-minute interval. The separate values were rounded to the same one.
USGS_Standardized_RmDupls %>% group_by(DateTime2) %>% summarise(n=sum(n())) %>% filter(n>1)
# This summarizes the flow column by the rounded DateTime
USGS_Standardized_RmDupls <- USGS_Standardized_RmDupls %>% group_by(DateTime2) %>% summarise(mean(X_00060_00000))
# Merge the rounded data back in and rename the column name to something more useful.
USGS_RmDupl<- merge(x=USGS_Standardized,y=USGS_Standardized_RmDupls, by="DateTime2",all.x=TRUE, all.y = FALSE)
setnames(USGS_RmDupl,old=c("mean(X_00060_00000)"),new=c("Discharge_CFS"))
#Remove the pre-averaging flow column
USGS_RmDupls <- USGS_RmDupl %>%
subset(select = -c(X_00060_00000))
# Removing duplicates from the fixed times and fixed cfs
USGS_RmDupls<- USGS_RmDupls %>%
distinct(DateTime2, Discharge_CFS, .keep_all = TRUE)
#Re-check
USGS_RmDupls %>% group_by(DateTime2) %>% summarise(n=sum(n())) %>% filter(n>1)
library(knitr)
library(lubridate)
library(tidyverse)
library(zoo)
opts_chunk$set(echo = TRUE)
site_id <- '09481740'
startDate = "2009-07-01"
#End date is 8/30/2022 to avoid null data at this time (9/5/2022)
endDate = "2022-08-30"
tz="America/Phoenix"
#creates table in R
#USGS_Raw <- readNWISuv(site_id,c('00060','00065'), startDate,endDate, tz)
#write.csv(USGS_Raw,"Data/Raw/USGS_09481740.csv")
USGS_Raw <- read.csv("Data/Raw/USGS_09481740.csv")
USGS_Standardized <- USGS_Raw
USGS_Standardized$DateTime2 <- round_date(as.POSIXct(USGS_Standardized$dateTime), "15 minutes")
USGS_Standardized$DateTime2 <-as.POSIXct(format(USGS_Standardized$DateTime2, format = '%Y-%m-%d %H:%M'), tz = tz)
USGS_Standardized %>% group_by(DateTime2) %>% summarise(n=sum(n())) %>% filter(n>1)
# remove the pre-rounding dateTime column
USGS_Standardized_RmDupls <- USGS_Standardized %>%
subset(select = -c(dateTime))
# This shows any duplicate dates. There are a few because the data was not collected on the standard 15-minute interval. The separate values were rounded to the same one.
USGS_Standardized_RmDupls %>% group_by(DateTime2) %>% summarise(n=sum(n())) %>% filter(n>1)
# This summarizes the flow column by the rounded DateTime
USGS_Standardized_RmDupls <- USGS_Standardized_RmDupls %>% group_by(DateTime2) %>% summarise(mean(X_00060_00000))
# Merge the rounded data back in and rename the column name to something more useful.
USGS_RmDupl<- merge(x=USGS_Standardized,y=USGS_Standardized_RmDupls, by="DateTime2",all.x=TRUE, all.y = FALSE)
setnames(USGS_RmDupl,old=c("mean(X_00060_00000)"),new=c("Discharge_CFS"))
#Remove the pre-averaging flow column
USGS_RmDupl <- USGS_RmDupl %>%
subset(select = -c(X_00060_00000))
# Removing duplicates from the fixed times and fixed cfs
USGS_RmDupl<- USGS_RmDupl %>%
distinct(DateTime2, Discharge_CFS, .keep_all = TRUE)
#Re-check
USGS_RmDupl %>% group_by(DateTime2) %>% summarise(n=sum(n())) %>% filter(n>1)
# Create the time series, formatted as posixt
TimeSeries <- data.frame(seq.POSIXt(as.POSIXct(format("2009-07-01 0:00",format = '%m/%d/%y %H:%M'), tz = tz), as.POSIXct(format("2022-08-30 0:00",format = '%m/%d/%y %H:%M'), tz = tz), by="15 min"))
colnames(TimeSeries)[1] = "DateTime"
TimeSeries$DateTime2 <-as.POSIXct(format(TimeSeries$DateTime, format = '%Y-%m-%d %H:%M'), tz = tz)
#Join data with time series, sort by DateTime2
# could also use left_join here. Issues were from duplicate values from the rounding merge.
USGS_TimeSeries <- merge(x=TimeSeries,y=USGS_RmDupl,by="DateTime2",all.x=TRUE, all.y = FALSE)
count(USGS_TimeSeries %>%
filter(is.na(Discharge_CFS)))
USGS_TimeSeries$date <- as_date(USGS_TimeSeries$DateTime2)
USGS_TimeSeries$count <- 1
TimeFlag <- USGS_TimeSeries %>%
filter(!is.na(Discharge_CFS)) %>%
group_by(date) %>%
summarize(value = sum(count))
USGS_TimeSeries <- right_join(TimeFlag, USGS_TimeSeries)
setnames(USGS_TimeSeries, "value", "CountUSGSbyDate")
USGS_TimeSeries_Fill <-
USGS_TimeSeries %>%
filter(CountUSGSbyDate>88)
USGS_TimeSeries_Fill$Filled <-  na.approx(USGS_TimeSeries_Fill$Discharge_CFS, rule = 2)
USGS_ForAnalysis <- right_join(USGS_TimeSeries_Fill,USGS_TimeSeries)
USGS_ForAnalysis2 <- USGS_ForAnalysis
USGS_ForAnalysis2$Filled<- ifelse(is.na(USGS_ForAnalysis$Discharge_CFS) == TRUE,USGS_ForAnalysis$Filled,USGS_ForAnalysis$Discharge_CFS)
count(USGS_ForAnalysis2 %>%
filter(is.na(Filled)))
USGS_ForAnalysis2 <-  USGS_ForAnalysis2 %>%
subset(select = -c(date, count, Discharge_CFS))
setnames(USGS_ForAnalysis2,old=c("Filled"),new=c("Discharge_CFS"))
remove(TimeFlag, TimeSeries, USGS_Raw, USGS_Standardized, USGS_TimeSeries_Fill, USGS_ForAnalysis, USGS_RmDupl, USGS_RmDupls, USGS_Standardized_RmDupls, view)
remove(TimeFlag, TimeSeries, USGS_TimeSeries, USGS_Raw, USGS_Standardized, USGS_TimeSeries_Fill, USGS_ForAnalysis, USGS_RmDupl, USGS_RmDupls, USGS_Standardized_RmDupls, view)
write.csv(USGS_ForAnalysis2, "Data/Processed/USGS_ForAnalysis20220905.csv")
#library(dplyr)
library(knitr)
library(lubridate)
opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "Data/Raw/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "Data/Raw/EPA_PortalQuery_Locations_Appended_SODN.csv"
coliform_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
ecoli_data <- coliform_data[coliform_data$CharacteristicName == "Escherichia coli", ]
ecoli_data_9223b <- ecoli_data[ecoli_data$ResultAnalyticalMethod.MethodName == "E coli, water, Colilert (24-28)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT (EDBERG)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "SM 9223B", ]
ecoli_data_9223b$DateAsDate <- mdy(ecoli_data_9223b$ActivityStartDate,tz="America/Phoenix")
ecoli_data_9223b$DateAsDate <-format(as.POSIXct(ecoli_data_9223b$DateAsDate),format='%Y-%m-%d')
ecoli_data_9223b_date <- ecoli_data_9223b[ecoli_data_9223b$DateAsDate >= "2009-07-01", ]
ecoli_ForAnalysis <- merge(ecoli_data_9223b_date, Locations, by = c("MonitoringLocationIdentifier"))
remove(coliform_data, ecoli_data, ecoli_data_9223b, ecoli_data_9223b_date)
remove(locations, coliform_data, ecoli_data, ecoli_data_9223b, ecoli_data_9223b_date)
remove(Locations, coliform_data, ecoli_data, ecoli_data_9223b, ecoli_data_9223b_date)
View(ecoli_ForAnalysis)
View(ecoli_ForAnalysis)
library(janitor)
library(knitr)
#library(dplyr)
library(knitr)
library(lubridate)
opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "Data/Raw/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "Data/Raw/EPA_PortalQuery_Locations_Appended_SODN.csv"
coliform_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
ecoli_data <- coliform_data[coliform_data$CharacteristicName == "Escherichia coli", ]
ecoli_data_9223b <- ecoli_data[ecoli_data$ResultAnalyticalMethod.MethodName == "E coli, water, Colilert (24-28)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT (EDBERG)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "SM 9223B", ]
ecoli_data_9223b$DateAsDate <- mdy(ecoli_data_9223b$ActivityStartDate,tz="America/Phoenix")
ecoli_data_9223b$DateAsDate <-format(as.POSIXct(ecoli_data_9223b$DateAsDate),format='%Y-%m-%d')
ecoli_data_9223b_date <- ecoli_data_9223b[ecoli_data_9223b$DateAsDate >= "2009-07-01", ]
ecoli_SampleLimit<- merge(ecoli_data_9223b_date, Locations, by = c("MonitoringLocationIdentifier"))
#library(dplyr)
library(knitr)
library(lubridate)
opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "Data/Raw/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "Data/Raw/EPA_PortalQuery_Locations_Appended_SODN.csv"
coliform_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
ecoli_data <- coliform_data[coliform_data$CharacteristicName == "Escherichia coli", ]
ecoli_data_9223b <- ecoli_data[ecoli_data$ResultAnalyticalMethod.MethodName == "E coli, water, Colilert (24-28)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT (EDBERG)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "SM 9223B", ]
ecoli_data_9223b$DateAsDate <- mdy(ecoli_data_9223b$ActivityStartDate,tz="America/Phoenix")
ecoli_data_9223b$DateAsDate <-format(as.POSIXct(ecoli_data_9223b$DateAsDate),format='%Y-%m-%d')
ecoli_data_9223b_date <- ecoli_data_9223b[ecoli_data_9223b$DateAsDate >= "2009-07-01", ]
ecoli_SampleLimit<- merge(ecoli_data_9223b_date, Locations, by = c("MonitoringLocationIdentifier"))
remove(coliform_data, ecoli_data, ecoli_data_9223b, ecoli_data_9223b_date, Locations, LocationFileName, RawFileName)
eoli_ForAnalysis <- janitor::remove_empty(ecoli_SampleLimit, which = "cols")
eoli_ForAnalysis <-remove_empty(ecoli_SampleLimit, which = "cols")
#library(dplyr)
library(knitr)
library(lubridate)
opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "Data/Raw/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "Data/Raw/EPA_PortalQuery_Locations_Appended_SODN.csv"
coliform_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
ecoli_data <- coliform_data[coliform_data$CharacteristicName == "Escherichia coli", ]
ecoli_data_9223b <- ecoli_data[ecoli_data$ResultAnalyticalMethod.MethodName == "E coli, water, Colilert (24-28)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT (EDBERG)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "SM 9223B", ]
ecoli_data_9223b$DateAsDate <- mdy(ecoli_data_9223b$ActivityStartDate,tz="America/Phoenix")
ecoli_data_9223b$DateAsDate <-format(as.POSIXct(ecoli_data_9223b$DateAsDate),format='%Y-%m-%d')
ecoli_data_9223b_date <- ecoli_data_9223b[ecoli_data_9223b$DateAsDate >= "2009-07-01", ]
ecoli_SampleLimit<- merge(ecoli_data_9223b_date, Locations, by = c("MonitoringLocationIdentifier"))
remove(coliform_data, ecoli_data, ecoli_data_9223b, ecoli_data_9223b_date, Locations, LocationFileName, RawFileName)
ecoli_ForAnalysis <-remove_empty(ecoli_SampleLimit, which = "cols")
View(ecoli_ForAnalysis)
ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$QuantificationLimit = "Present Above Quantification Limit", ecoli_ForAnalysis$QuantificationLimit == "Value"
ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$QuantificationLimit == "Present Above Quantification Limit", ecoli_ForAnalysis$QuantificationLimit == "Value"
)
ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$QuantificationLimit == "Present Above Quantification Limit", ecoli_ForAnalysis$QuantificationLimit == "Value")
ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", ecoli_ForAnalysis$QuantificationLimit == "Present Above Quantification Limit", ecoli_ForAnalysis$QuantificationLimit == "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis <- keep(ecoli_ForAnalysis, ~n_distinct(.) > 1)
library(tidyverse)
ecoli_ForAnalysis <- keep(ecoli_ForAnalysis, ~n_distinct(.) > 1)
summary(ecoli_ForAnalysis)
ecoli_ForAnalysis <- ecoli_ForAnalysis %>%
subset(select = -c(OrganizationIdentifier.x, # data contained in another column
ActivityDepthHeightMeasure.MeasureValue, # all 0 or NA
ActivityDepthHeightMeasure.MeasureUnitCode, # associated column is being removed
ActivityTopDepthHeightMeasure.MeasureValue, # all 0 or NA
ActivityTopDepthHeightMeasure.MeasureUnitCode, # associated column is being removed
ActivityBottomDepthHeightMeasure.MeasureValue, # all 0 or NA
ActivityBottomDepthHeightMeasure.MeasureUnitCode, # associated column is being removed
USGSPCode, # all 50468 or NA
ResultDepthHeightMeasure.MeasureValue, # all 0 or NA
HUCEightDigitCode)) # all 15050301 or NA
write.csv(ecoli_ForAnalysis, "Desktop/Ecoli.csv")
write.csv(ecoli_ForAnalysis, "C:/Users/Laura/Desktop/Ecoli.csv")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue <= 0 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
View(ecoli_ForAnalysis)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue <= 0 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "
Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue <= 0 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == "
Present Above Quantification Limit")
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == "Present Above Quantification Limit")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue <= 0 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == "Present Above Quantification Limit" & QuantificationLimit != "Present Above Quantification Limit")
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == " Present Above Quantification Limit" & QuantificationLimit != "Present Above Quantification Limit")
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == "Present Above Quantification Limit " & QuantificationLimit != "Present Above Quantification Limit")
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == "
Present Above Quantification Limit" & QuantificationLimit != "Present Above Quantification Limit")
ecoli_ForAnalysis$ResultDetectionConditionText[1412]
View(ecoli_ForAnalysis)
ecoli_ForAnalysis$ResultDetectionConditionText[5]
5
ecoli_ForAnalysis$ResultDetectionConditionText[5]
ecoli_ForAnalysis$MonitoringLocationIdentifier[5]
ecoli_ForAnalysis$ResultDetectionConditionText[1:15]
ecoli_ForAnalysis$ResultDetectionConditionText[1:40]
ecoli_ForAnalysis$ResultDetectionConditionText[17]
ecoli_ForAnalysis$QuantificationLimit[17]
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 |
ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit"| ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$ResultDetectionConditionText[17]
ecoli_ForAnalysis$QuantificationLimit[17]
ecoli_ForAnalysis <-remove_empty(ecoli_SampleLimit, which = "cols")
ecoli_ForAnalysis <- keep(ecoli_ForAnalysis, ~n_distinct(.) > 1)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue <= 0 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == "
Present Above Quantification Limit" & QuantificationLimit != "Present Above Quantification Limit")
ecoli_ForAnalysis$ResultDetectionConditionText[17]
ecoli_ForAnalysis$QuantificationLimit[17]
library(janitor)
library(knitr)
library(tidyverse)
ecoli_ForAnalysis <-remove_empty(ecoli_SampleLimit, which = "cols")
ecoli_ForAnalysis <- keep(ecoli_ForAnalysis, ~n_distinct(.) > 1)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 |
ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit"| ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue <= 0 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == "
Present Above Quantification Limit" & QuantificationLimit != "Present Above Quantification Limit")
ecoli_ForAnalysis$ResultDetectionConditionText[17]
ecoli_ForAnalysis$QuantificationLimit[17]
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 |
ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit"| ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue <= 0 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == "
Present Above Quantification Limit" & QuantificationLimit != "Present Above Quantification Limit")
ecoli_ForAnalysis$ResultDetectionConditionText[17]
ecoli_ForAnalysis$QuantificationLimit[17]
library(janitor)
library(knitr)
library(tidyverse)
ecoli_ForAnalysis <-remove_empty(ecoli_SampleLimit, which = "cols")
ecoli_ForAnalysis <- keep(ecoli_ForAnalysis, ~n_distinct(.) > 1)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit"|
ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue <= 0 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == "
Present Above Quantification Limit" & QuantificationLimit != "Present Above Quantification Limit")
ecoli_ForAnalysis$ResultDetectionConditionText[17]
ecoli_ForAnalysis$QuantificationLimit[17]
library(janitor)
library(knitr)
library(tidyverse)
ecoli_ForAnalysis <-remove_empty(ecoli_SampleLimit, which = "cols")
ecoli_ForAnalysis <- keep(ecoli_ForAnalysis, ~n_distinct(.) > 1)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue <= 0 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == "
Present Above Quantification Limit" & QuantificationLimit != "Present Above Quantification Limit")
ecoli_ForAnalysis$ResultDetectionConditionText[17]
ecoli_ForAnalysis$QuantificationLimit[17]
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue <= 0 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == "
Present Above Quantification Limit" & QuantificationLimit != "Present Above Quantification Limit")
ecoli_ForAnalysis$ResultDetectionConditionText[17]
ecoli_ForAnalysis$QuantificationLimit[17]
library(janitor)
library(knitr)
library(tidyverse)
ecoli_ForAnalysis <-remove_empty(ecoli_SampleLimit, which = "cols")
ecoli_ForAnalysis <- keep(ecoli_ForAnalysis, ~n_distinct(.) > 1)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$ResultDetectionConditionText[17]
ecoli_ForAnalysis$QuantificationLimit[17]
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue <= 0 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$ResultDetectionConditionText[17]
ecoli_ForAnalysis$QuantificationLimit[17]
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ResultDetectionConditionText == "
Present Above Quantification Limit" & QuantificationLimit != "Present Above Quantification Limit")
ecoli_ForAnalysis$ResultDetectionConditionText[17]
ecoli_ForAnalysis$QuantificationLimit[17]
ecoli_ForAnalysis %>%
filter(ecoli_SampleLimit$ResultMeasureValue <= 0)
test <- ecoli_ForAnalysis %>%
filter(ecoli_SampleLimit$ResultMeasureValue <= 0)
View(test)
View(test)
View(ecoli_ForAnalysis)
View(test)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ActivityTypeCode == "
Quality Control Sample-Equipment Blank", "QAQC-Blank", ecoli_ForAnalysis$QuantificationLimit)
View(ecoli_ForAnalysis)
library(janitor)
library(knitr)
library(tidyverse)
ecoli_ForAnalysis <-remove_empty(ecoli_SampleLimit, which = "cols")
ecoli_ForAnalysis <- keep(ecoli_ForAnalysis, ~n_distinct(.) > 1)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ActivityTypeCode == "
Quality Control Sample-Equipment Blank", "QAQC-FDBL", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ActivityTypeCode == "
Quality Control Sample-Field Replicate", "QAQC-DUPL", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ecoli_ForAnalysis$QuantificationLimit != "QAQC-FDBL")%>%
filter(ecoli_ForAnalysis$QuantificationLimit != "QAQC-DUPL")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ActivityTypeCode == "
Quality Control Sample-Equipment Blank", "QAQC-FDBL", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ActivityTypeCode == "
Quality Control Sample-Field Replicate", "QAQC-DUPL", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ecoli_ForAnalysis$QuantificationLimit != "QAQC-FDBL")%>%
filter(ecoli_ForAnalysis$QuantificationLimit != "QAQC-DUPL")
View(ecoli_ForAnalysis)
library(janitor)
library(knitr)
library(tidyverse)
ecoli_ForAnalysis <-remove_empty(ecoli_SampleLimit, which = "cols")
ecoli_ForAnalysis <- keep(ecoli_ForAnalysis, ~n_distinct(.) > 1)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ActivityTypeCode == "
Quality Control Sample-Equipment Blank", "QAQC-FDBL", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ActivityTypeCode == "
Quality Control Sample-Field Replicate", "QAQC-DUPL", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ecoli_ForAnalysis$QuantificationLimit == "QAQC-FDBL")
View(ecoli_ForAnalysis)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ActivityTypeCode == "Quality Control Sample-Field Replicate", "QAQC-DUPL", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ecoli_ForAnalysis$QuantificationLimit == "QAQC-DUPL")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ActivityTypeCode == "Quality Control Sample-Field Replicate", "QAQC-DUPL", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ActivityTypeCode == "Quality Control Sample-Field Blank", "QAQC-FDBL", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis %>%
filter(ecoli_ForAnalysis$QuantificationLimit == "QAQC-DUPL"|ecoli_ForAnalysis$QuantificationLimit == "QAQC-FDBL")
test <-ecoli_ForAnalysis %>%
filter(ecoli_ForAnalysis$QuantificationLimit == "QAQC-DUPL"|ecoli_ForAnalysis$QuantificationLimit == "QAQC-FDBL")
View(test)
View(ecoli_ForAnalysis)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_ForAnalysis$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_ForAnalysis$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ActivityTypeCode == "Quality Control Sample-Field Replicate", "QAQC-DUPL", ecoli_ForAnalysis$QuantificationLimit)
ecoli_ForAnalysis$QuantificationLimit <- ifelse(ecoli_ForAnalysis$ActivityTypeCode == "Quality Control Sample-Equipment Blank", "QAQC-FDBL", ecoli_ForAnalysis$QuantificationLimit)
test <-ecoli_ForAnalysis %>%
filter(ecoli_ForAnalysis$QuantificationLimit == "QAQC-DUPL"|ecoli_ForAnalysis$QuantificationLimit == "QAQC-FDBL")
View(test)
ecoli_SamplesOnly <-ecoli_ForAnalysis %>%
filter(ecoli_ForAnalysis$QuantificationLimit != "QAQC-DUPL"|ecoli_ForAnalysis$QuantificationLimit != "QAQC-FDBL")
ecoli_SamplesOnly <-ecoli_ForAnalysis %>%
filter(ecoli_ForAnalysis$QuantificationLimit == "QAQC-DUPL"|ecoli_ForAnalysis$QuantificationLimit == "QAQC-FDBL")
ecoli_SamplesOnly <-ecoli_ForAnalysis %>%
filter(ecoli_ForAnalysis$QuantificationLimit != "QAQC-DUPL"&ecoli_ForAnalysis$QuantificationLimit != "QAQC-FDBL")
ecoli_SamplesOnly <- ecoli_ForAnalysis %>%
filter(ActivityTypeCode != "Quality Control Sample-Field Replicate" & ActivityTypeCode !="Quality Control Sample-Equipment Blank")
View(ecoli_SamplesOnly)
View(ecoli_SamplesOnly)
ecoli_ForAnalysis %>%
count(ActivityTypeCode = "Sample-Routine")
count(ecoli_ForAnalysis$ActivityTypeCode = "Sample-Routine")
count(ecoli_ForAnalysis$ActivityTypeCode == "Sample-Routine")
ecoli_ForAnalysis %>%
count(ActivityTypeCode == "Sample-Routine")
library(janitor)
library(knitr)
library(tidyverse)
ecoli_Processing <-remove_empty(ecoli_SampleLimit, which = "cols")
ecoli_Processing <- keep(ecoli_Processing, ~n_distinct(.) > 1)
summary(ecoli_Processing)
ecoli_Processing <- ecoli_Processing %>%
subset(select = -c(OrganizationIdentifier.x, # data contained in another column
ActivityDepthHeightMeasure.MeasureValue, # all 0 or NA
ActivityDepthHeightMeasure.MeasureUnitCode, # associated column is being removed
ActivityTopDepthHeightMeasure.MeasureValue, # all 0 or NA
ActivityTopDepthHeightMeasure.MeasureUnitCode, # associated column is being removed
ActivityBottomDepthHeightMeasure.MeasureValue, # all 0 or NA
ActivityBottomDepthHeightMeasure.MeasureUnitCode, # associated column is being removed
USGSPCode, # all 50468 or NA
ResultDepthHeightMeasure.MeasureValue, # all 0 or NA
HUCEightDigitCode)) # all 15050301 or NA
ecoli_Processing$QuantificationLimit <- ifelse(ecoli_SampleLimit$ResultMeasureValue > 2419 | ecoli_Processing$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_Processing$QuantificationLimit <- ifelse(ecoli_Processing$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_Processing$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_Processing$QuantificationLimit)
ecoli_SamplesOnly <- ecoli_Processing %>%
filter(ActivityTypeCode != "Quality Control Sample-Field Replicate" & ActivityTypeCode !="Quality Control Sample-Equipment Blank")
# this is just a check to ensure that this leads me to the same count as the samples only table.
#ecoli_Processing %>%
#count(ActivityTypeCode == "Sample-Routine")
library(janitor)
library(knitr)
library(tidyverse)
ecoli_Processing <-remove_empty(ecoli_SampleLimit, which = "cols")
library(janitor)
library(knitr)
library(tidyverse)
ecoli_Processing <-remove_empty(ecoli_SampleLimit, which = "cols")
library(janitor)
library(knitr)
library(tidyverse)
ecoli_Processing <-remove_empty(ecoli_SampleLimit, which = "cols")
#library(dplyr)
library(knitr)
library(lubridate)
opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Laura/Desktop/DSI_Project/Data/")
RawFileName <- "Data/Raw/EPA_PortalQuery_Appended_SODN.csv"
#Current file uses points lassoed in arcmap. It uses any sampling locations north of inputs from both the Nogales WWTP and Sonoita Creek in case either of these are point sources of e. Coli.
LocationFileName <- "Data/Raw/EPA_PortalQuery_Locations_Appended_SODN.csv"
coliform_data <- read.csv(RawFileName)
Locations <- read.csv(LocationFileName)
ecoli_data <- coliform_data[coliform_data$CharacteristicName == "Escherichia coli", ]
ecoli_data_9223b <- ecoli_data[ecoli_data$ResultAnalyticalMethod.MethodName == "E coli, water, Colilert (24-28)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT (EDBERG)"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "COLILERT"|
ecoli_data$ResultAnalyticalMethod.MethodName ==  "SM 9223B", ]
ecoli_data_9223b$DateAsDate <- mdy(ecoli_data_9223b$ActivityStartDate,tz="America/Phoenix")
ecoli_data_9223b$DateAsDate <-format(as.POSIXct(ecoli_data_9223b$DateAsDate),format='%Y-%m-%d')
ecoli_data_9223b_date <- ecoli_data_9223b[ecoli_data_9223b$DateAsDate >= "2009-07-01", ]
ecoli_SampleLimit<- merge(ecoli_data_9223b_date, Locations, by = c("MonitoringLocationIdentifier"))
remove(coliform_data, ecoli_data, ecoli_data_9223b, ecoli_data_9223b_date, Locations, LocationFileName, RawFileName)
library(janitor)
library(knitr)
library(tidyverse)
ecoli_Processing <-remove_empty(ecoli_SampleLimit, which = "cols")
ecoli_Processing <- keep(ecoli_Processing, ~n_distinct(.) > 1)
summary(ecoli_Processing)
ecoli_Processing <- ecoli_Processing %>%
subset(select = -c(OrganizationIdentifier.x, # data contained in another column
ActivityDepthHeightMeasure.MeasureValue, # all 0 or NA
ActivityDepthHeightMeasure.MeasureUnitCode, # associated column is being removed
ActivityTopDepthHeightMeasure.MeasureValue, # all 0 or NA
ActivityTopDepthHeightMeasure.MeasureUnitCode, # associated column is being removed
ActivityBottomDepthHeightMeasure.MeasureValue, # all 0 or NA
ActivityBottomDepthHeightMeasure.MeasureUnitCode, # associated column is being removed
USGSPCode, # all 50468 or NA
ResultDepthHeightMeasure.MeasureValue, # all 0 or NA
HUCEightDigitCode)) # all 15050301 or NA
ecoli_Processing$QuantificationLimit <- ifelse(ecoli_Processing$ResultMeasureValue > 2419 | ecoli_Processing$ResultDetectionConditionText == "Present Above Quantification Limit", "Present Above Quantification Limit", "Value")
ecoli_Processing$QuantificationLimit <- ifelse(ecoli_Processing$ResultDetectionConditionText == "Present Below Quantification Limit"|ecoli_Processing$ResultDetectionConditionText == "Not Detected", "Present Below Quantification Limit", ecoli_Processing$QuantificationLimit)
ecoli_SamplesOnly <- ecoli_Processing %>%
filter(ActivityTypeCode != "Quality Control Sample-Field Replicate" & ActivityTypeCode !="Quality Control Sample-Equipment Blank")
# this is just a check to ensure that this leads me to the same count as the samples only table.
#ecoli_Processing %>%
#count(ActivityTypeCode == "Sample-Routine")
eColi_ForAnalysis$StandardizedResult <- eColi_ForAnalysis$ResultMeasureValue
eColi_ForAnalysis <- ecoli_SamplesOnly
eColi_ForAnalysis$StandardizedResult <- eColi_ForAnalysis$ResultMeasureValue
eColi_ForAnalysis <- ecoli_SamplesOnly
eColi_ForAnalysis$StandardizedResult <- eColi_ForAnalysis$ResultMeasureValue
eColi_ForAnalysis$StandardizedResult <- ifelse(eColi_ForAnalysis$QuantificationLimit == "Present Above Quantification Limit", 2420, eColi_ForAnalysis$ResultMeasureValue)
View(eColi_ForAnalysis)
eColi_ForAnalysis <- ecoli_SamplesOnly
eColi_ForAnalysis$StandardizedResult <- eColi_ForAnalysis$ResultMeasureValue
eColi_ForAnalysis$StandardizedResult <- ifelse(eColi_ForAnalysis$QuantificationLimit == "Present Above Quantification Limit", 2420, eColi_ForAnalysis$ResultMeasureValue)
eColi_ForAnalysis$StandardizedResult <- ifelse(eColi_ForAnalysis$QuantificationLimit == "Present Below Quantification Limit",0, eColi_ForAnalysis$ResultMeasureValue)
eColi_ForAnalysis <- ecoli_SamplesOnly
eColi_ForAnalysis$StandardizedResult <- eColi_ForAnalysis$ResultMeasureValue
eColi_ForAnalysis$StandardizedResult <- ifelse(eColi_ForAnalysis$QuantificationLimit == "Present Above Quantification Limit", 2420, eColi_ForAnalysis$ResultMeasureValue)
eColi_ForAnalysis$StandardizedResult <- ifelse(eColi_ForAnalysis$QuantificationLimit == "Present Below Quantification Limit",0, eColi_ForAnalysis$ResultMeasureValue)
eColi_ForAnalysis <- ecoli_SamplesOnly
eColi_ForAnalysis$StandardizedResult <- eColi_ForAnalysis$ResultMeasureValue
eColi_ForAnalysis$StandardizedResult <- ifelse(eColi_ForAnalysis$QuantificationLimit ==
"Present Above Quantification Limit", 2420, eColi_ForAnalysis$ResultMeasureValue)
eColi_ForAnalysis$StandardizedResult <- ifelse(eColi_ForAnalysis$QuantificationLimit == "Present Below Quantification Limit",0, eColi_ForAnalysis$ResultMeasureValue)
